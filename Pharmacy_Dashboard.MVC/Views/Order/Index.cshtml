@using Graduation_Project.Core.Enums
@using Pharmacy_Dashboard.MVC.ViewModel.OrderViewModels
@model OrdersListViewModel

<div class="col-lg-12 mb-4">
    <div class="card h-100">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span class="fw-bold fs-5">📦 Orders Overview</span>

            <!-- Filter Form -->
            <form asp-action="Index" method="get" class="d-flex flex-wrap gap-3 align-items-end">
                <input type="hidden" name="pharmacyId" value="1" />

                <div class="filter-group">
                    <label for="orderStatusFilter" class="form-label mb-1 small">Status</label>
                    <div class="position-relative">
                        <select name="orderStatusFilter" class="custom-dropdown">
                            <option value="">All</option>
                            @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                            {
                                <option value="@status.ToString()" selected="@(Model.CurrentFilter?.OrderStatus == status ? "selected" : null)">
                                    @status
                                </option>
                            }
                        </select>
                        <i class="bi bi-chevron-down dropdown-icon"></i>
                    </div>
                </div>

                <div class="filter-group">
                    <label for="dateFilter" class="form-label mb-1 small">Order Date (Before)</label>
                    <input type="date"
                           name="dateFilter"
                           class="form-control form-control-sm rounded-3 shadow-sm border-0"
                           value="@Model.CurrentFilter?.DateFilter?.ToString("yyyy-MM-dd")" />
                </div>

                <div class="d-flex align-items-center">
                    <button type="submit" class="btn-filter">
                        <i class="bi bi-filter me-1"></i> Filter
                    </button>
                </div>
            </form>
        </div>

        <div class="card-body p-0">
            <div class="table">
                <table class="table table-striped table-hover table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>Order ID</th>
                            <th>Order Date</th>
                            <th>Patient Name</th>
                            <th>Delivery Address</th>
                            <th>Total Price</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Orders)
                        {
                            <tr class="table-row">
                                <td>
                                    <a href="@Url.Action("GetOrder", "Order", new { id = item.Id })">@item.Id</a>
                                </td>
                                <td>@item.OrderDate.ToString("yyyy-MM-dd")</td>
                                <td>@item.PatientName</td>
                                <td>@item.DeliveryAddress</td>
                                <td>@item.TotalPrice $</td>
                                <td>
                                    <span class="badge @GetStatusClass(item.Status)">
                                        @item.Status
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav class="mt-3 d-flex justify-content-center">
                <ul class="pagination">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@(Model.CurrentPage - 1)"
                           asp-route-orderStatusFilter="@(Model.CurrentFilter?.OrderStatus?.ToString())"
                           asp-route-dateFilter="@Model.CurrentFilter?.DateFilter?.ToString("yyyy-MM-dd")"
                           asp-route-pharmacyId="1">
                            Previous
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@i"
                               asp-route-orderStatusFilter="@(Model.CurrentFilter?.OrderStatus?.ToString())"
                               asp-route-dateFilter="@Model.CurrentFilter?.DateFilter?.ToString("yyyy-MM-dd")"
                               asp-route-pharmacyId="1">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@(Model.CurrentPage + 1)"
                           asp-route-orderStatusFilter="@(Model.CurrentFilter?.OrderStatus?.ToString())"
                           asp-route-dateFilter="@Model.CurrentFilter?.DateFilter?.ToString("yyyy-MM-dd")"
                           asp-route-pharmacyId="1">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@functions {
    public string GetStatusClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "badge-warning",
            OrderStatus.Confirmed => "badge-success",
            OrderStatus.Completed => "badge-info",
            OrderStatus.Cancelled => "badge-danger",
            _ => "badge-secondary"
        };
    }
}

<style>
    .table {
        border-radius: 0.5rem;
        border-collapse: separate;
        border-spacing: 0;
        table-layout: fixed;
        width: 100%;
    }

        .table thead {
            background-color: #f8f9fa;
            text-align: center;
            font-weight: bold;
        }

        .table th, .table td {
            vertical-align: middle;
            padding: 0.75rem;
            text-align: center;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

    .table-hover tbody tr {
        transition: transform 0.25s ease, box-shadow 0.25s ease;
    }

        .table-hover tbody tr:hover {
            transform: scale(1.01);
            background-color: #f1f1f1;
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.08);
            z-index: 2;
            position: relative;
        }

    /* Filter UI */
    .filter-group {
        display: flex;
        flex-direction: column;
        min-width: 160px;
        margin-right: 1rem;
    }

    .custom-dropdown {
        border-radius: 0.5rem;
        border: 1px solid #ced4da;
        padding: 0.45rem 2rem 0.45rem 0.75rem;
        background-color: #fff;
        box-shadow: 0 1px 2px rgba(0,0,0,0.05);
        appearance: none;
        width: 100%;
        font-size: 0.875rem;
        position: relative;
        background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 10 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0l5 6 5-6z' fill='%236c757d'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 0.65rem auto;
    }

    .badge {
        padding: 0.5em 1em;
        border-radius: 0.25rem;
        font-weight: 600;
        font-size: 0.9rem;
        display: inline-block;
    }

    .badge-warning {
        background-color: #ffe08a;
        color: #856404;
    }

    .badge-success {
        background-color: #c3e6cb;
        color: #155724;
    }

    .badge-info {
        background-color: #bee5eb;
        color: #0c5460;
    }

    .badge-danger {
        background-color: #f5c6cb;
        color: #721c24;
    }

    .badge-secondary {
        background-color: #e2e3e5;
        color: #383d41;
    }

    .pagination {
        font-size: 0.9rem;
    }

        .pagination .page-link {
            border-radius: 0.25rem;
            padding: 0.5rem 1rem;
        }

        .pagination .active .page-link {
            background-color: #007bff;
            border-color: #007bff;
            color: white;
        }

        .pagination .disabled .page-link {
            background-color: #f1f1f1;
            border-color: #e2e3e5;
        }

    /* Ensure table doesn't scroll horizontally */
    .table-container {
        overflow-x: auto;
        width: 100%;
        margin-bottom: 1rem;
    }

    /* Responsive filters with spacing */
    form.d-flex.flex-wrap {
        gap: 1.25rem;
        margin-bottom: 1rem;
    }

</style>
