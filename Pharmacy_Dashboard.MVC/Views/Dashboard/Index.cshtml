@model Pharmacy_Dashboard.MVC.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid px-0">
    @* No horizontal padding on container *@

    <div class="row">
        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 mb-4">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-primary-blue">
                        <i class="fas fa-cart-plus"></i>
                    </div>
                    <div class="stat-info ms-3">
                        <div class="stat-label">Total Pending Orders</div>
                         <div class="stat-value">@Model.TotalPendingOrders </div>  
                        <a href="#" class="stat-details">Show Details</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 mb-4">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-success-green">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="stat-info ms-3">
                        <div class="stat-label">Total Orders</div>
                        <div class="stat-value">@Model.TotalOrders</div>
                        <a href="#" class="stat-details">Show Details</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 mb-4">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-accent-yellow">
                        <i class="fas fa-dollar-sign"></i>
                    </div>
                    <div class="stat-info ms-3">
                        <div class="stat-label">Total Profit</div>
                        <div class="stat-value">@Model.TotalProfit $</div>
                        <a href="#" class="stat-details">Show Details</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 mb-4">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-danger-red">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="stat-info ms-3">
                        <div class="stat-label">Out of Stock</div>
                        <div class="stat-value">@Model.TotalLowStock</div>
                        <a href="#" class="stat-details">Show Details</a>
                    </div>
                </div>
            </div>
        </div>
    </div> <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card h-100">
                <div class="card-header">
                   Low Stock List
                    <div class="card-header-action">
                        <a href="#">See All <i class="fas fa-chevron-right fa-xs ms-1"></i></a>
                    </div>
                </div>
                <div class="card-body p-0">
                    @* Remove padding for table to fit edge-to-edge *@
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Medicine name</th>
                                    <th>ActiveSubstance</th>
                                    <th>Quantity</th>
                                    <th>Price</th>
                                    @* <th>Chart</th>  *@
                                    @* <th>Return</th>  *@
                                </tr>
                            </thead>
                            <tbody>
                                @* Use @foreach loop here with Model.ExpiringItems *@
                                @foreach(var lowStock in Model.lowStockList)
                                {
                                    <tr>
                                        <td> @lowStock.Name_en </td>
                                        <td> @lowStock.ActiveSubstance </td>
                                        <td> @lowStock.Quantity </td>
                                        <td> @lowStock.Price $</td>
                                        @* <td><i class="fas fa-chart-line text-success"></i></td>  *@
                                        @* <td><i class="fas fa-redo text-primary"></i></td>  *@
                                    </tr>
                                }
                           
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-4">
            <div class="card h-100">
                <div class="card-header">
                    @* Recent Order's *@
                    Pending Orders
                    <div class="card-header-action">
                        <a href="#">See All <i class="fas fa-chevron-right fa-xs ms-1"></i></a>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>PatientName</th>
                                    <th>DeliveryAddress</th>
                                    <th>TotalPrice</th>
                                    <th>Status</th>
                                    
                                </tr>
                            </thead>
                            <tbody>
                                @* Use @foreach loop here with Model.RecentOrders *@
                                @foreach (var item in Model.pendingOrdersList)
                                {
                                    <tr>
                                        <td> @item.PatientName </td>
                                        <td> @item.DeliveryAddress </td>
                                        <td> @item.TotalPrice $</td>
                              
                                        <td><span class="badge status-delivered"> @item.Status </span></td>
                                    </tr>
                                }
                              
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8 mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        Orders Over Last 30 Days (Line Chart)
                        
                    </div>
                    <div class="card-body">
                        <canvas id="ordersLineChart"></canvas>
                    </div>
                   
                </div>
            </div>

            <div class="col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        Top 5 Medicines (Pie)
                    </div>
                    <div class="card-body">
                        <canvas id="topMedicinesPieChart"></canvas>
                    </div>
                   
                </div>

            </div>
        </div>

</div>



    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            var ctx = document.getElementById('ordersLineChart').getContext('2d');
            var ordersLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.OrdersLast30Days.Select(x => x.Date.ToString("MM/dd")))),
                    datasets: [{
                        label: 'Orders',
                        data: @Html.Raw(Json.Serialize(Model.OrdersLast30Days.Select(x => x.OrderCount))),
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        fill: true
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            stepSize: 1
                        }
                    }
                }
            });
        </script>

        <script>
            var pieCtx = document.getElementById('topMedicinesPieChart').getContext('2d');
            var topMedicinesPieChart = new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Top5Medicines.Select(x => x.MedicineName))),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(Model.Top5Medicines.Select(x => x.QuantitySold))),
                        backgroundColor: [
                            '#FF6384',
                            '#36A2EB',
                            '#FFCE56',
                            '#4BC0C0',
                            '#9966FF'
                        ]
                    }]
                }
            });
        </script>
  
    }


   
